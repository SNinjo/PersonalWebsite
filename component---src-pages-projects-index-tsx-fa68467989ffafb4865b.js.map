{"version":3,"file":"component---src-pages-projects-index-tsx-fa68467989ffafb4865b.js","mappings":"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","sources":["webpack://SNinjo Personal Website/./src/components/Icon/index.tsx","webpack://SNinjo Personal Website/./src/components/Icon/index.module.scss","webpack://SNinjo Personal Website/./src/components/Role/index.tsx","webpack://SNinjo Personal Website/./src/components/Role/index.module.scss","webpack://SNinjo Personal Website/./src/components/SEO/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.module.scss","webpack://SNinjo Personal Website/./src/pages/projects/index.module.scss","webpack://SNinjo Personal Website/./src/pages/projects/index.tsx","webpack://SNinjo Personal Website/./src/templates/project/index.module.scss","webpack://SNinjo Personal Website/./src/templates/project/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype Props = {\r\n    name: string,\r\n\tisFocus?: boolean,\r\n\tonClick?: () => void\r\n}\r\nconst Icon: FC<Props> = ({ name, isFocus=false, onClick=()=>{} }) => {\r\n    const { allFile } = useStaticQuery(graphql`\r\n        query Icon {\r\n            allFile(filter: {relativeDirectory: {eq: \"icon\"}}) {\r\n                nodes {\r\n                name\r\n                    childImageSharp {\r\n                        gatsbyImageData\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n\t\t<picture\r\n\t\t\tclassName={`${style.picture} ${isFocus ? style.focused : ''}`}\r\n\t\t\ttitle={name}\r\n\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t<GatsbyImage\r\n\t\t\t\tclassName={style.image}\r\n\t\t\t\timage={\r\n\t\t\t\t\tgetImage(\r\n\t\t\t\t\t\tallFile.nodes\r\n\t\t\t\t\t\t\t.find((file: {name: string}) => (file.name === name.toLowerCase()))\r\n\t\t\t\t\t)!\r\n\t\t\t\t}\r\n\t\t\t\talt={`${name.toLowerCase()} icon`}\r\n\t\t\t\tloading='lazy'\r\n\t\t\t/>\r\n\t\t</picture>\r\n    )\r\n}\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--8b4b0\";\nexport var image = \"index-module--image--2392b\";\nexport var picture = \"index-module--picture--3768a\";","import React, { FC } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n\tnavigateTo?: string,\r\n}\r\nconst Role: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?roles=${encodeURIComponent(name)}`}\r\n\t\t\tclassName={`${style.link} ${isFocus ? style.focused : ''}`}\r\n        >\r\n\t\t\t#{name}\r\n        </Link>\r\n    )\r\n}\r\nexport default Role;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--55d46\";\nexport var link = \"index-module--link--c3c71\";","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}/${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { CSSProperties, FC, useState } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst mapColor: Map<string, string> = new Map([\r\n\t['all', '#ffffff'],\r\n    ['project', '#fd5f5f'],\r\n    ['side project', '#fd995f'],\r\n    ['software', '#fdf25f'],\r\n    ['web', '#bffda2'],\r\n    // ['UI/ UX', '#5fbefd'],\r\n    ['game', '#775ffd'],\r\n    ['IoT', '#b65ffd'],\r\n    // ['AI, \"#ff8af5\"],\r\n])\r\nconst strColorIdle = \"#8b8b8b\";\r\nconst strColorHover = \"#67676b\";\r\nconst strColorClicked = \"#5b5b5e\";\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n\tnavigateTo?: string,\r\n}\r\nconst Tab: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    const [isHover, setHoverState] = useState(false);\r\n\r\n    const css: CSSProperties = {\r\n        borderLeft: `solid 5px ${mapColor.get(name) ?? 'white'}`,\r\n        backgroundColor: (isFocus ? strColorClicked : (isHover ? strColorHover : strColorIdle)),\r\n    }\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?tabs=${encodeURIComponent(name)}`}\r\n        >\r\n            <div\r\n                style={css}\r\n                className={style.div}\r\n                onMouseEnter={() => setHoverState(true)}\r\n                onMouseLeave={() => setHoverState(false)}\r\n            >\r\n                <span>{name}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default Tab;\r\n","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--3e51f\";","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--ff6a6\";\nexport var headline = \"index-module--headline--4cda7\";\nexport var icon = \"index-module--icon--ff7ce\";\nexport var name = \"index-module--name--32248\";\nexport var project = \"index-module--project--d0211\";","import React, { FC } from 'react';\r\nimport { Link, PageProps, graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\n\r\nimport SEO from 'components/SEO';\r\nimport Layout from 'components/Layout';\r\nimport Tab from '../../components/Tab';\r\nimport Role from '../../components/Role';\r\nimport Icon from '../../components/Icon';\r\nimport { ImageFile, Project, getProjectImageData, parseProject } from '../../templates/project';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype SearchParameterNames = 'tabs' | 'roles' | 'languages' | 'frameworks';\r\nclass SearchParameters {\r\n\ttabs: Set<string>;\r\n\troles: Set<string>;\r\n\tlanguages: Set<string>;\r\n\tframeworks: Set<string>;\r\n\r\n\tprivate encode(key: string, value: Set<string>): string {\r\n\t\treturn `${key}=${encodeURIComponent([ ...value ].join('&'))}`;\r\n\t}\r\n\tprivate decode(parameter: string | null): Set<string> {\r\n\t\tif (parameter === null) return new Set();\r\n\t\treturn new Set(\r\n\t\t\tdecodeURIComponent(parameter)\r\n\t\t\t\t.split('&')\r\n\t\t\t\t.filter(value => (value !== ''))\r\n\t\t);\r\n\t}\r\n\r\n\tconstructor(search: string) {\r\n\t\tconst urlSearchParameters = new URLSearchParams(search);\r\n\t\tthis.tabs = this.decode(urlSearchParameters.get('tabs'));\r\n\t\tthis.roles = this.decode(urlSearchParameters.get('roles'));\r\n\t\tthis.languages = this.decode(urlSearchParameters.get('languages'));\r\n\t\tthis.frameworks = this.decode(urlSearchParameters.get('frameworks'));\r\n\t}\r\n\ttoString(): string {\r\n\t\tconst parameters = [\r\n\t\t\tthis.encode('tabs', this.tabs),\r\n\t\t\tthis.encode('roles', this.roles),\r\n\t\t\tthis.encode('languages', this.languages),\r\n\t\t\tthis.encode('frameworks', this.frameworks),\r\n\t\t]\r\n\t\treturn `?${parameters.join('&')}`;\r\n\t}\r\n\tclone(): SearchParameters {\r\n\t\treturn new SearchParameters(this.toString());\r\n\t}\r\n\r\n\thas(key: SearchParameterNames, value: string): boolean {\r\n\t\treturn this[key].has(value);\r\n\t}\r\n\tadd(key: SearchParameterNames, value: string): SearchParameters {\r\n\t\tthis[key].add(value);\r\n\t\treturn this;\r\n\t}\r\n\tdelete(key: SearchParameterNames, value: string): SearchParameters {\r\n\t\tthis[key].delete(value);\r\n\t\treturn this;\r\n\t}\r\n\tgetNavigationPath(key: SearchParameterNames, value: string): string {\r\n\t\tconst newSearchParameters = this.clone();\r\n\t\treturn (\r\n\t\t\tthis.has(key, value) ?\r\n\t\t\t\tnewSearchParameters.delete(key, value).toString() :\r\n\t\t\t\tnewSearchParameters.add(key, value).toString()\r\n\t\t);\r\n\t}\r\n\r\n\tisMatch(project: Project): boolean {\r\n\t\tfor (const tab of this.tabs) {\r\n\t\t\tif (!project.tabs.includes(tab)) return false;\r\n\t\t}\r\n\t\tfor (const role of this.roles) {\r\n\t\t\tif (!project.roles.includes(role)) return false;\r\n\t\t}\r\n\t\tfor (const language of this.languages) {\r\n\t\t\tif (!project.programming.languages.includes(language)) return false;\r\n\t\t}\r\n\t\tfor (const framework of this.frameworks) {\r\n\t\t\tif (!project.programming.frameworks.includes(framework)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\ntype DataProps = {\r\n\tprojects: {\r\n\t\tnodes: Array<{\r\n\t\t\tfields: {\r\n\t\t\t\tcontents: string,\r\n\t\t\t}\r\n\t\t\trelativeDirectory: string,\r\n\t\t}>\r\n\t}\r\n\tprojectImages: {\r\n\t\tnodes: Array<ImageFile>\r\n\t}\r\n}\r\nconst ProjectsPage: FC<PageProps<DataProps>> = ({ data, location }) => {\r\n\tconst tabs = new Set<string>();\r\n\tconst roles = new Set<string>();\r\n\tconst languages = new Set<string>();\r\n\tconst frameworks = new Set<string>();\r\n\tdata.projects.nodes.forEach(node => {\r\n\t\tconst project: Project = parseProject(node.fields.contents);\r\n\t\tproject.tabs.forEach(tab => tabs.add(tab));\r\n\t\tproject.roles.forEach(role => roles.add(role));\r\n\t\tproject.programming.languages.forEach(language => languages.add(language));\r\n\t\tproject.programming.frameworks.forEach(framework => frameworks.add(framework));\r\n\t});\r\n\r\n\tconst searchParameters = new SearchParameters(location.search);\r\n\r\n\tconst sortNames = (name01: string, name02: string): 1 | -1 => {\r\n\t\treturn (name01.toLowerCase() < name02.toLowerCase()) ? -1 : 1;\r\n\t}\r\n\r\n\tconst projects = (\r\n\t\tdata.projects.nodes\r\n\t\t\t.map(node => parseProject(node.fields.contents, node.relativeDirectory))\r\n\t\t\t.filter(project => searchParameters.isMatch(project))\r\n\t\t\t.sort((project01, project02) => {\r\n\t\t\t\tif ((project01.time.end === null) && (project02.time.end === null)) {\r\n\t\t\t\t\tif (project01.name < project02.name) return -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (project01.time.end === null) return -1;\r\n\t\t\t\telse if (project02.time.end === null) return 1;\r\n\t\t\t\telse if (project01.time.end > project02.time.end) return -1;\r\n\t\t\t\treturn 1\r\n\t\t\t})\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h1>FILTER</h1>\r\n\t\t\t\t\t\t<h2>{projects.length} results</h2>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Tabs</h2>\r\n\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t{[ ...tabs ]\r\n\t\t\t\t\t\t\t\t.sort(sortNames)\r\n\t\t\t\t\t\t\t\t.map(tab =>\r\n\t\t\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\t\t\tkey={`tab_${tab}`}\r\n\t\t\t\t\t\t\t\t\t\tname={tab}\r\n\t\t\t\t\t\t\t\t\t\tisFocus={searchParameters.has('tabs', tab)}\r\n\t\t\t\t\t\t\t\t\t\tnavigateTo={searchParameters.getNavigationPath('tabs', tab)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Roles</h2>\r\n\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t{[ ...roles ]\r\n\t\t\t\t\t\t\t\t.sort(sortNames)\r\n\t\t\t\t\t\t\t\t.map(role =>\r\n\t\t\t\t\t\t\t\t\t<Role\r\n\t\t\t\t\t\t\t\t\t\tkey={`role_${role}`}\r\n\t\t\t\t\t\t\t\t\t\tname={role}\r\n\t\t\t\t\t\t\t\t\t\tisFocus={searchParameters.has('roles', role)}\r\n\t\t\t\t\t\t\t\t\t\tnavigateTo={searchParameters.getNavigationPath('roles', role)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Frameworks</h2>\r\n\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t{[ ...frameworks ]\r\n\t\t\t\t\t\t\t\t.sort(sortNames)\r\n\t\t\t\t\t\t\t\t.map(framework =>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tkey={`framework_${framework}`}\r\n\t\t\t\t\t\t\t\t\t\tto={searchParameters.getNavigationPath('frameworks', framework)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\tname={framework}\r\n\t\t\t\t\t\t\t\t\t\t\tisFocus={searchParameters.has('frameworks', framework)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<h2>Languages</h2>\r\n\t\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t\t{[ ...languages ]\r\n\t\t\t\t\t\t\t\t.sort(sortNames)\r\n\t\t\t\t\t\t\t\t.map(language =>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tkey={`language_${language}`}\r\n\t\t\t\t\t\t\t\t\t\tto={searchParameters.getNavigationPath('languages', language)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\t\tname={language}\r\n\t\t\t\t\t\t\t\t\t\t\tisFocus={searchParameters.has('languages', language)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</header>\r\n\t\t\t\t{projects.map(project =>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tkey={`project_${project.pathname}`}\r\n\t\t\t\t\t\tto={project.pathname}\r\n\t\t\t\t\t\tclassName={style.project}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{project.image.icon?\r\n\t\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\t\tclassName={style.icon}\r\n\t\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\t\tproject.image.icon,\r\n\t\t\t\t\t\t\t\t\tdata.projectImages.nodes\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\talt={`${project.name} icon`}\r\n\t\t\t\t\t\t\t\tloading='eager'\r\n\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t<div className={style.icon} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={style.name}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={style.headline}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.headline}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t)\r\n}\r\nexport default ProjectsPage;\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n\t<SEO\r\n\t\ttitle='Projects'\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)\r\n\r\nexport const query = graphql`\r\n    query Project {\r\n\t\tprojects: allFile(\r\n\t\t\tfilter:{\r\n\t\t\t\tname: {eq: \"project\"},\r\n\t\t\t\textension: {eq: \"json\"}\r\n\t\t\t}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tfields {\r\n\t\t\t\t\tcontents\r\n\t\t\t\t}\r\n\t\t\t\trelativeDirectory\r\n\t\t\t}\r\n\t\t}\r\n\t\tprojectImages: allFile(\r\n\t\t\tfilter: {\r\n\t\t\t\textension: {regex: \"/png|jpg/\"},\r\n\t\t\t\trelativeDirectory: {regex: \"/^projects//\"}\r\n\t\t\t}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tchildImageSharp {\r\n\t\t\t\t\tgatsbyImageData\r\n\t\t\t\t}\r\n\t\t\t\tname\r\n\t\t\t\text\r\n\t\t\t\trelativeDirectory\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n","// extracted by mini-css-extract-plugin\nexport var content = \"index-module--content--addbe\";\nexport var cover = \"index-module--cover--72abe\";\nexport var description = \"index-module--description--77cfc\";\nexport var disable = \"index-module--disable--5f48a\";\nexport var div = \"index-module--div--6ad27\";\nexport var header = \"index-module--header--db97b\";\nexport var icon = \"index-module--icon--b9843\";\nexport var icons = \"index-module--icons--8f651\";\nexport var image = \"index-module--image--3ec17\";\nexport var navigator = \"index-module--navigator--bf120\";\nexport var picture = \"index-module--picture--1d6a9\";\nexport var programming = \"index-module--programming--d7e17\";\nexport var roles = \"index-module--roles--0cdf4\";\nexport var tabs = \"index-module--tabs--0eb4c\";\nexport var textCenter = \"index-module--textCenter--0696e\";\nexport var verticalLine = \"index-module--verticalLine--dcf2c\";","import React, { FC } from 'react';\r\nimport { graphql, Link, PageProps } from 'gatsby';\r\nimport { GatsbyImage, IGatsbyImageData, getImage } from 'gatsby-plugin-image';\r\nimport moment from 'moment';\r\n\r\nimport SEO from '../../components/SEO';\r\nimport Layout from '../../components/Layout';\r\nimport Icon from '../../components/Icon';\r\nimport Tab from '../../components/Tab';\r\nimport Role from '../../components/Role';\r\nimport * as style from './index.module.scss';\r\n\r\nexport type ImageFile = {\r\n\tname: string,\r\n\text: string,\r\n\trelativeDirectory: string,\r\n}\r\ntype DataProps = {\r\n\tproject: {\r\n\t\tfields: {\r\n\t\t\tcontents: string,\r\n\t\t}\r\n\t\trelativeDirectory: string,\r\n\t}\r\n\timages: {\r\n\t\tnodes: Array<ImageFile>\r\n\t}\r\n\ticons: {\r\n\t\tnodes: Array<{\r\n\t\t\tname: string,\r\n\t\t}>\r\n\t}\r\n}\r\nexport type Project = {\r\n\tname: string,\r\n\theadline: string,\r\n\timage: {\r\n\t\ticon: string,\r\n\t\tcover: string,\r\n\t},\r\n\tlink: {\r\n\t\tcode: string,\r\n\t\tdemo: string,\r\n\t},\r\n\ttime: {\r\n\t\tstart: string,\r\n\t\tend: string | null,\r\n\t},\r\n\ttabs: Array<string>,\r\n\troles: Array<string>,\r\n\tprogramming: {\r\n\t\tlanguages: Array<string>,\r\n\t\tframeworks: Array<string>,\r\n\t},\r\n\tdescriptions: Array<{\r\n\t\ttitle: string,\r\n\t\ttext?: string,\r\n\t\tlist?: Array<string>,\r\n\t\timage?: string,\r\n\t}>,\r\n\tpathname: string,\r\n}\r\nexport function parseProject(contents: string, pathname?: string): Project {\r\n\treturn {\r\n\t\t...JSON.parse(contents),\r\n\t\tpathname: `/${pathname}` ?? '',\r\n\t};\r\n}\r\nexport function getProjectImageData(pathname: string, fileName: string, files: Array<ImageFile>): IGatsbyImageData {\r\n\treturn getImage(\r\n\t\tfiles.find((file) => (\r\n\t\t\tpathname === `/${file.relativeDirectory}` &&\r\n\t\t\t\tfileName === `${file.name}${file.ext}`\r\n\t\t))!\r\n\t)!\r\n}\r\n\r\nconst ProjectTemplate: FC<PageProps<DataProps>> = ({ data }) => {\r\n\tconst project = parseProject(data.project.fields.contents, data.project.relativeDirectory);\r\n\tconst parseTimeText = (time: string): string => moment(time).format('MMM YYYY');\r\n\tconst getDuration = (time: { start: string, end: string | null}): string => {\r\n\t\tconst endTime = (\r\n\t\t\ttime.end ?\r\n\t\t\t\tmoment(time.end).endOf('month') :\r\n\t\t\t\tmoment()\r\n\t\t);\r\n\t\tconst duration = moment.duration(endTime.diff(moment(time.start)));\r\n\t\tconst year = Math.floor(duration.asYears());\r\n\t\tconst month = Math.round(duration.asMonths() % 12);\r\n\t\treturn `${(year > 0) ? `${year}yrs ` : ''}${month}mos`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.header}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\tclassName={style.cover}\r\n\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\tproject.image.cover,\r\n\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\talt={`${project.name} cover`}\r\n\t\t\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{project.image.icon?\r\n\t\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\t\tclassName={style.icon}\r\n\t\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\t\tproject.image.icon,\r\n\t\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\talt={`${project.name} icon`}\r\n\t\t\t\t\t\t\t\tloading='eager'\r\n\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<h1>{project.name}</h1>\r\n\t\t\t\t\t\t<h2>{project.headline}</h2>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.navigator}\r\n\t\t\t\t>\r\n                    <a\r\n\t\t\t\t\t\tclassName={project.link.code ? '' : style.disable}\r\n                        href={project.link.code}\r\n                        target='_blank'\r\n                        rel='noreferrer'\r\n\t\t\t\t\t\ttitle='source code link'\r\n                    >CODE</a>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={style.verticalLine}\r\n\t\t\t\t\t/>\r\n                    <a\r\n\t\t\t\t\t\tclassName={`${style.link} ${project.link.demo ? '' : style.disable}`}\r\n                        href={project.link.demo}\r\n                        target='_blank'\r\n                        rel='noreferrer'\r\n\t\t\t\t\t\ttitle='DEMO link'\r\n                    >DEMO</a>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.textCenter}\r\n\t\t\t\t>\r\n\t\t\t\t\t{`${parseTimeText(project.time.start)}` +\r\n\t\t\t\t\t\t` - ${project.time.end ? parseTimeText(project.time.end) : 'Present'}` +\r\n\t\t\t\t\t\t` · ${getDuration(project.time)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.tabs}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Tab</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{project.tabs.map(tab =>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\tkey={`tab_${tab}`}\r\n\t\t\t\t\t\t\t\tname={tab}\r\n\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.roles}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Role</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{project.roles.map(role =>\r\n\t\t\t\t\t\t\t<Role\r\n\t\t\t\t\t\t\t\tkey={`role${role}`}\r\n\t\t\t\t\t\t\t\tname={role}\r\n\t\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.programming}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Framework <span>|</span> Language</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.icons}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.programming.frameworks.map(framework =>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tkey={`icon_${framework}`}\r\n\t\t\t\t\t\t\t\t\tto={`/projects/?frameworks=${framework}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\tname={framework}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{(project.programming.languages.length !== 0) && (project.programming.frameworks.length !== 0)?\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={style.verticalLine}\r\n\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.icons}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.programming.languages.map(language =>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tkey={`icon_${language}`}\r\n\t\t\t\t\t\t\t\t\tto={`/projects/?languages=${language}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\tname={language}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.description}\r\n\t\t\t\t>\r\n\t\t\t\t\t{project.descriptions.map(description =>\r\n\t\t\t\t\t\t<article\r\n\t\t\t\t\t\t\tkey={`article_${description.title}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>{description.title}</h1>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={style.content}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{description.text ?\r\n\t\t\t\t\t\t\t\t\t\t<p>{description.text}</p> :\r\n\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{description.list ?\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t{description.list.map((text, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`descriptionText_${description.title}_${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</ul> :\r\n\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{description.image?\r\n\t\t\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\t\t\tclassName={style.image}\r\n\t\t\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\t\t\tdescription.image,\r\n\t\t\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\talt={`${description.title} image`}\r\n\t\t\t\t\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t)\r\n}\r\nexport default ProjectTemplate;\r\n\r\nexport const Head: FC<PageProps<DataProps>> = ({ data, location }) => (\r\n\t<SEO\r\n\t\ttitle={`${parseProject(data.project.fields.contents).name} | Projects`}\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)\r\n\r\nexport const query = graphql`\r\n    query Project($id: String!){\r\n\t\tproject: file(id: {eq: $id}) {\r\n\t\t\tfields {\r\n\t\t\t\tcontents\r\n\t\t\t}\r\n\t\t\trelativeDirectory\r\n\t\t}\r\n\t\timages: allFile(\r\n\t\t\tfilter: {\r\n\t\t\t\textension: {regex: \"/png|jpg/\"},\r\n\t\t\t\trelativeDirectory: {regex: \"/^projects//\"}\r\n\t\t\t}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tchildImageSharp {\r\n\t\t\t\t\tgatsbyImageData\r\n\t\t\t\t}\r\n\t\t\t\tname\r\n\t\t\t\text\r\n\t\t\t\trelativeDirectory\r\n\t\t\t}\r\n\t\t}\r\n\t\ticons: allFile(\r\n\t\t\tfilter: {relativeDirectory: {eq: \"icon\"}}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tname\r\n\t\t\t\tchildImageSharp {\r\n\t\t\t\t\tgatsbyImageData\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n"],"names":["_ref","name","isFocus","onClick","allFile","useStaticQuery","React","className","style","title","GatsbyImage","image","getImage","nodes","find","file","toLowerCase","alt","loading","navigateTo","Link","to","encodeURIComponent","subtitle","pathname","site","mainTitle","description","author","imagePath","siteUrl","siteMetadata","url","rel","href","content","mapColor","Map","isHover","setHoverState","useState","css","borderLeft","get","backgroundColor","onMouseEnter","onMouseLeave","icon","SearchParameters","search","urlSearchParameters","URLSearchParams","this","tabs","decode","roles","languages","frameworks","_proto","encode","key","value","_toConsumableArray","join","parameter","Set","decodeURIComponent","split","filter","toString","clone","has","add","delete","getNavigationPath","newSearchParameters","isMatch","project","tab","includes","role","language","programming","framework","data","location","projects","forEach","node","parseProject","fields","contents","searchParameters","sortNames","name01","name02","map","relativeDirectory","sort","project01","project02","time","end","Layout","length","Tab","Role","Icon","getProjectImageData","projectImages","headline","Head","_ref2","SEO","cover","disable","div","header","icons","textCenter","verticalLine","JSON","parse","fileName","files","ext","parseTimeText","moment","format","images","link","code","target","demo","start","endTime","endOf","duration","diff","year","Math","floor","asYears","round","asMonths","getDuration","descriptions","text","list","index","_ref3"],"sourceRoot":""}