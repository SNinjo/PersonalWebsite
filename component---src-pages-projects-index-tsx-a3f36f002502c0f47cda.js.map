{"version":3,"file":"component---src-pages-projects-index-tsx-a3f36f002502c0f47cda.js","mappings":"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","sources":["webpack://SNinjo Personal Website/./src/components/SEO/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.module.scss","webpack://SNinjo Personal Website/./src/components/ProjectList/Project/index.module.scss","webpack://SNinjo Personal Website/./src/components/ProjectList/Project/index.tsx","webpack://SNinjo Personal Website/./src/components/ProjectList/index.tsx","webpack://SNinjo Personal Website/./src/components/ProjectList/index.module.scss","webpack://SNinjo Personal Website/./src/pages/projects/index.tsx","webpack://SNinjo Personal Website/./src/assets/Project/video/OMG.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/RCCar.jpg","webpack://SNinjo Personal Website/./src/assets/Project/video/chatroom.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/crawler.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/databaseEditor.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/imageProcessor.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/snake.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/sninjo.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/yummyMap.gif","webpack://SNinjo Personal Website/./src/assets/Project/video/ sync ^\\.\\/.*$"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { CSSProperties, FC, useState } from 'react';\r\nimport { Link, navigate } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nexport const encode = (tabName: string): string => {\r\n    return `#${tabName.replace(/\\s/g, '_')}`;\r\n}\r\nexport const decode = (hash: string): string => {\r\n    hash = hash.replace(/^#/, '').replace(/_/g, ' ');\r\n    if (!arrTabNames.includes(hash)) {\r\n        navigate(`/projects/#${arrTabNames[0]}`);\r\n    }\r\n    return hash;\r\n}\r\n\r\n\r\nexport const arrTabNames: Array<string> = [\r\n    \"all\",\r\n    \"project\",\r\n    \"side project\",\r\n    \"web\",\r\n    \"software\",\r\n    \"UI/ UX\",\r\n    \"game\",\r\n    \"embedded system\",\r\n    // \"AI\",\r\n]\r\n\r\nconst mapColor: Map<string, string> = new Map([\r\n    [arrTabNames[1], '#fd5f5f'],\r\n    [arrTabNames[2], '#fd995f'],\r\n    [arrTabNames[3], '#fdf25f'],\r\n    [arrTabNames[4], '#bffda2'],\r\n    [arrTabNames[5], '#5fbefd'],\r\n    [arrTabNames[6], '#775ffd'],\r\n    [arrTabNames[7], '#b65ffd'],\r\n    // [arrTabNames[8], \"#ff8af5\"],\r\n])\r\n\r\nconst strColorIdle = \"#919191\";\r\nconst strColorHover = \"#7a7a7a\";\r\nconst strColorClicked = \"#747474\";\r\n\r\n\r\ntype Props = {\r\n    tabName: string,\r\n    isFocus: boolean,\r\n    focus: () => void,\r\n}\r\nconst Tab: FC<Props> = ({ tabName, isFocus, focus }) => {\r\n    const [isHover, setHoverState] = useState(false);\r\n\r\n\r\n    const css: CSSProperties = {\r\n        borderLeft: `solid 5px ${mapColor.get(tabName) ?? 'white'}`,\r\n        backgroundColor: (isFocus ? strColorClicked : (isHover ? strColorHover : strColorIdle)),\r\n        cursor: (isFocus? 'default' : 'pointer'),\r\n    }\r\n    return (\r\n        <Link\r\n            to={encode(tabName)}\r\n        >\r\n            <div\r\n                style={css}\r\n                className={style.div}\r\n                onClick={() => focus()}\r\n                onMouseEnter={() => setHoverState(true)}\r\n                onMouseLeave={() => setHoverState(false)}\r\n            >\r\n                <span>{tabName}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default Tab;","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--3e51f\";","// extracted by mini-css-extract-plugin\nexport var HorizontalArrangement = \"index-module--HorizontalArrangement--1872e\";\nexport var div = \"index-module--div--0688c\";\nexport var image = \"index-module--image--f7fd2\";\nexport var left = \"index-module--left--1467a\";\nexport var main = \"index-module--main--5ff7c\";\nexport var right = \"index-module--right--37015\";\nexport var secondary = \"index-module--secondary--7dec8\";","import React, { CSSProperties, FC, useEffect, useState } from 'react';\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nimport { FadeAnimation } from 'components/FadeAnimation';\r\nimport Tab from 'components/Tab';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nexport interface iProject {\r\n    name: string;\r\n    tab: Array<string>;\r\n    programmingLanguage: Array<string>;\r\n    description: Array<string>;\r\n    linkCode: string;\r\n    linkDemo: string;\r\n    imgFileName: string;\r\n    videoFileName: string;\r\n}\r\n\r\n\r\nconst maxWidth: number = 630;\r\nconst keepHoverMillisecond: number = 500;\r\n\r\ntype Props = {\r\n    project: iProject,\r\n    focusedTab: string,\r\n    focusTab: Function,\r\n}\r\nconst Project: FC<Props> = ({ project, focusedTab, focusTab }) => {\r\n    const { allFile } = useStaticQuery(graphql`\r\n        query ProjectImage {\r\n            allFile(\r\n                filter: {\r\n                    relativeDirectory: {regex: \"^/Project/\"},\r\n                    sourceInstanceName: {eq: \"images\"}\r\n                }\r\n            ) {\r\n                nodes {\r\n                    name\r\n                    childImageSharp {\r\n                        gatsbyImageData\r\n                    }\r\n                    relativeDirectory\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const getImageData = (name: string, type: 'image' | 'video') => {\r\n        let fileName = name.match(/(.*)\\.[a-z]/)![1];\r\n        return allFile.nodes\r\n            .find(  (file: { name: string, relativeDirectory: string }) => ((file.name === fileName) && (file.relativeDirectory === `Project/${type}`))  )\r\n            .childImageSharp;\r\n    }\r\n\r\n\r\n    const [windowWidth, setWindowWidth] = useState(maxWidth + 1);\r\n    useEffect(() => {\r\n        setWindowWidth(window.innerWidth)\r\n        window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth))\r\n    }, [])\r\n\r\n    const [isKeepingHovering, setKeepHoveringState] = useState(false);\r\n    const [isHover, setHoverState] = useState(false);\r\n    const [isPlayVideo, setPlayVideo] = useState(false);\r\n    const [isOpenDescription, setOpenState] = useState(false);\r\n\r\n    if (!isPlayVideo && isKeepingHovering && isHover) {\r\n        setKeepHoveringState(false);\r\n        setPlayVideo(true);\r\n    }\r\n    const mouseEnter: React.MouseEventHandler<HTMLDivElement> = () => {\r\n        setHoverState(true);\r\n        setKeepHoveringState(false);\r\n        setTimeout(  () => setKeepHoveringState(true), keepHoverMillisecond  );\r\n    }\r\n    const mouseLeave: React.MouseEventHandler<HTMLDivElement> = () => {\r\n        setHoverState(false);\r\n        setKeepHoveringState(false);\r\n        setPlayVideo(false);\r\n    }\r\n\r\n\r\n    const cssMainCursor: CSSProperties = {\r\n        cursor: (!isOpenDescription ? \"pointer\" : \"unset\"),\r\n    }\r\n    return (\r\n        <div\r\n            className={style.div}\r\n        >\r\n            <section\r\n                id={style.main}\r\n                style={cssMainCursor}\r\n                onClick={() => setOpenState(true)}\r\n                onMouseEnter={mouseEnter}\r\n                onMouseLeave={mouseLeave}\r\n            >\r\n                {\r\n                    (windowWidth > maxWidth)?\r\n                        <>\r\n                            <GatsbyImage\r\n                                className={style.image}\r\n                                image={  getImage(getImageData(project.imgFileName, 'image'))!  }\r\n                                alt={`${project.name} demo image`}\r\n                                loading='lazy'\r\n                            />\r\n                            {\r\n                                (project.videoFileName && !isOpenDescription)?\r\n                                    <FadeAnimation isShow={isPlayVideo}>\r\n                                        <img\r\n                                            className={style.image}\r\n                                            src={require(`../../../assets/Project/video/${project.videoFileName}`).default}\r\n                                            alt={`${project.name} demo video`}\r\n                                        />\r\n                                    </FadeAnimation>:\r\n                                    <></>\r\n                            }\r\n                        </>:\r\n                        <></>\r\n                }\r\n                <FadeAnimation isShow={isOpenDescription || (windowWidth < maxWidth)}>\r\n                    <article>\r\n                        {\r\n                            ((windowWidth > maxWidth) && (isOpenDescription))? \r\n                                <button\r\n                                    onClick={(event) => {\r\n                                        event.stopPropagation();\r\n                                        setOpenState(false);\r\n                                    }}\r\n                                >\r\n                                    &lt;\r\n                                </button>:\r\n                                <></>\r\n                        }\r\n                        <h2>{project.name}</h2>\r\n                        {\r\n                            project.description.map((description, index) => (\r\n                                <p key={`${project.name}_description${index}`}>{description}</p>\r\n                            ))\r\n                        }\r\n                        <div>\r\n                            {\r\n                                project.programmingLanguage.map(languageName => (\r\n                                    <span key={`${project.name}_language_${languageName}`}>{languageName}</span>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </article>\r\n                </FadeAnimation>\r\n            </section>\r\n            <section id={style.secondary}>\r\n                <div\r\n                    id={style.left}\r\n                    className={style.HorizontalArrangement}\r\n                >\r\n                    {\r\n                        project.tab.map(tabName => (\r\n                            <Tab\r\n                                key={`${project.name}_tab_${tabName}`}\r\n                                tabName={tabName}\r\n                                isFocus={focusedTab === tabName}\r\n                                focus={() => focusTab(tabName)}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <nav\r\n                    id={style.right}\r\n                    className={style.HorizontalArrangement}\r\n                >\r\n                    {project.linkCode !== \"\" ? <a target=\"_blank\" href={project.linkCode}>Code</a> : <></>}\r\n                    {project.linkDemo !== \"\" ? <a target=\"_blank\" href={project.linkDemo}>Demo</a> : <></>}\r\n                </nav>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Project;","import React, { FC, useEffect, useState } from 'react';\r\n\r\nimport Tab, { arrTabNames, decode } from '../Tab';\r\nimport Project, { iProject } from './Project';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype Props = {\r\n    locationHash: string,\r\n}\r\nconst ProjectList: FC<Props> = ({ locationHash }) => {\r\n    const [strFocusTabName, setFocusTabName] = useState(arrTabNames[0]);\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        setFocusTabName(decode(locationHash));\r\n    }, [locationHash])\r\n    let arrProjects: Array<iProject> = require(\"../../assets/Project/index.json\");\r\n\r\n\r\n    return (\r\n        <div className={style.div}>\r\n            <nav className={style.nav}>\r\n                {\r\n                    arrTabNames.map(tabName => (\r\n                        <Tab\r\n                            key={`tab_${tabName}`}\r\n                            tabName={tabName}\r\n                            isFocus={strFocusTabName === tabName}\r\n                            focus={() => setFocusTabName(tabName)}\r\n                        />\r\n                    ))\r\n                }\r\n            </nav>\r\n            <section className={style.section}>\r\n                {\r\n                    arrProjects\r\n                        .filter(project => (strFocusTabName === arrTabNames[0]) || (project.tab.includes(strFocusTabName)))\r\n                        .map(project => (\r\n                            <Project\r\n                                key={`project_${project.name}`}\r\n                                project={project}\r\n                                focusedTab={strFocusTabName}\r\n                                focusTab={setFocusTabName}\r\n                            />\r\n                        ))\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--63b77\";\nexport var nav = \"index-module--nav--efc87\";\nexport var section = \"index-module--section--ef38c\";","import React, { FC } from 'react';\r\nimport { PageProps } from 'gatsby';\r\n\r\nimport Layout from 'components/Layout';\r\nimport ProjectList from 'components/ProjectList';\r\nimport SEO from 'components/SEO';\r\n\r\n\r\nconst ProjectsPage: FC<PageProps> = ({ location }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<ProjectList\r\n\t\t\t\tlocationHash={location.hash}\r\n\t\t\t/>\r\n\t\t</Layout>\r\n\t)\r\n}\r\nexport default ProjectsPage;\r\n\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n\t<SEO\r\n\t\ttitle='Projects'\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)","export default __webpack_public_path__ + \"static/OMG-88ffb3a571b2cbca724238117a6b6bab.gif\";","export default __webpack_public_path__ + \"static/RCCar-9c8bc451f2ea62a1ff2407768a6a256e.jpg\";","export default __webpack_public_path__ + \"static/chatroom-6b7267aa6bb6b6aff5d3b48d28cff921.gif\";","export default __webpack_public_path__ + \"static/crawler-1d326fe51ae029f71ef6a8ebf525912c.gif\";","export default __webpack_public_path__ + \"static/databaseEditor-f27aec14e4850881262622f9a29c4ca8.gif\";","export default __webpack_public_path__ + \"static/imageProcessor-2b15f5506a6d99cbe9580043611f6bdf.gif\";","export default __webpack_public_path__ + \"static/snake-39dad4f1ccdf8511ac062ed13ff731ed.gif\";","export default __webpack_public_path__ + \"static/sninjo-5ef6dedd56336c7de5a5f53ed6b9bdac.gif\";","export default __webpack_public_path__ + \"static/yummyMap-6aaaf66c343547334a44a36c51e7b546.gif\";","var map = {\n\t\"./OMG.gif\": 2000,\n\t\"./RCCar.jpg\": 5090,\n\t\"./chatroom.gif\": 1172,\n\t\"./crawler.gif\": 1886,\n\t\"./databaseEditor.gif\": 5283,\n\t\"./imageProcessor.gif\": 5376,\n\t\"./snake.gif\": 5399,\n\t\"./sninjo.gif\": 8208,\n\t\"./yummyMap.gif\": 229\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3322;"],"names":["_ref","title","subtitle","pathname","site","useStaticQuery","mainTitle","description","author","image","imagePath","siteUrl","siteMetadata","url","React","rel","href","name","content","encode","tabName","replace","arrTabNames","mapColor","Map","isFocus","focus","isHover","setHoverState","useState","css","borderLeft","get","backgroundColor","cursor","Link","to","style","className","onClick","onMouseEnter","onMouseLeave","HorizontalArrangement","maxWidth","project","focusedTab","focusTab","allFile","windowWidth","setWindowWidth","useEffect","window","innerWidth","addEventListener","isKeepingHovering","setKeepHoveringState","isPlayVideo","setPlayVideo","isOpenDescription","setOpenState","cssMainCursor","id","setTimeout","GatsbyImage","getImage","type","fileName","match","nodes","find","file","relativeDirectory","childImageSharp","getImageData","imgFileName","alt","loading","videoFileName","FadeAnimation","isShow","src","require","default","event","stopPropagation","map","index","key","programmingLanguage","languageName","tab","Tab","linkCode","target","linkDemo","locationHash","strFocusTabName","setFocusTabName","hash","scrollTo","top","behavior","includes","navigate","arrProjects","filter","Project","location","Layout","ProjectList","Head","_ref2","SEO","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}