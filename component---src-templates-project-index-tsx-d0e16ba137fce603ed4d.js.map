{"version":3,"file":"component---src-templates-project-index-tsx-d0e16ba137fce603ed4d.js","mappings":"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","sources":["webpack://SNinjo Personal Website/./src/components/Icon/index.tsx","webpack://SNinjo Personal Website/./src/components/Icon/index.module.scss","webpack://SNinjo Personal Website/./src/components/Role/index.tsx","webpack://SNinjo Personal Website/./src/components/Role/index.module.scss","webpack://SNinjo Personal Website/./src/components/SEO/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.module.scss","webpack://SNinjo Personal Website/./src/templates/project/index.module.scss","webpack://SNinjo Personal Website/./src/templates/project/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype Props = {\r\n    name: string,\r\n\tisFocus?: boolean,\r\n\tonClick?: () => void\r\n}\r\nconst Icon: FC<Props> = ({ name, isFocus=false, onClick=()=>{} }) => {\r\n    const { allFile } = useStaticQuery(graphql`\r\n        query Icon {\r\n            allFile(filter: {relativeDirectory: {eq: \"icon\"}}) {\r\n                nodes {\r\n                name\r\n                    childImageSharp {\r\n                        gatsbyImageData\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n\t\t<picture\r\n\t\t\tclassName={`${style.picture} ${isFocus ? style.focused : ''}`}\r\n\t\t\ttitle={name}\r\n\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t<GatsbyImage\r\n\t\t\t\tclassName={style.image}\r\n\t\t\t\timage={\r\n\t\t\t\t\tgetImage(\r\n\t\t\t\t\t\tallFile.nodes\r\n\t\t\t\t\t\t\t.find((file: {name: string}) => (file.name === name.toLowerCase()))\r\n\t\t\t\t\t)!\r\n\t\t\t\t}\r\n\t\t\t\talt={`${name.toLowerCase()} icon`}\r\n\t\t\t\tloading='lazy'\r\n\t\t\t/>\r\n\t\t</picture>\r\n    )\r\n}\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--8b4b0\";\nexport var image = \"index-module--image--2392b\";\nexport var picture = \"index-module--picture--3768a\";","import React, { FC } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n\tnavigateTo?: string,\r\n}\r\nconst Role: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?roles=${encodeURIComponent(name)}`}\r\n\t\t\tclassName={`${style.link} ${isFocus ? style.focused : ''}`}\r\n        >\r\n\t\t\t#{name}\r\n        </Link>\r\n    )\r\n}\r\nexport default Role;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--55d46\";\nexport var link = \"index-module--link--c3c71\";","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}/${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { CSSProperties, FC, useState } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst mapColor: Map<string, string> = new Map([\r\n\t['all', '#ffffff'],\r\n    ['project', '#fd5f5f'],\r\n    ['side project', '#fd995f'],\r\n    ['software', '#fdf25f'],\r\n    ['web', '#bffda2'],\r\n    // ['UI/ UX', '#5fbefd'],\r\n    ['game', '#775ffd'],\r\n    ['IoT', '#b65ffd'],\r\n    // ['AI, \"#ff8af5\"],\r\n])\r\nconst strColorIdle = \"#8b8b8b\";\r\nconst strColorHover = \"#67676b\";\r\nconst strColorClicked = \"#5b5b5e\";\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n\tnavigateTo?: string,\r\n}\r\nconst Tab: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    const [isHover, setHoverState] = useState(false);\r\n\r\n    const css: CSSProperties = {\r\n        borderLeft: `solid 5px ${mapColor.get(name) ?? 'white'}`,\r\n        backgroundColor: (isFocus ? strColorClicked : (isHover ? strColorHover : strColorIdle)),\r\n    }\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?tabs=${encodeURIComponent(name)}`}\r\n        >\r\n            <div\r\n                style={css}\r\n                className={style.div}\r\n                onMouseEnter={() => setHoverState(true)}\r\n                onMouseLeave={() => setHoverState(false)}\r\n            >\r\n                <span>{name}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default Tab;\r\n","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--3e51f\";","// extracted by mini-css-extract-plugin\nexport var content = \"index-module--content--addbe\";\nexport var cover = \"index-module--cover--72abe\";\nexport var description = \"index-module--description--77cfc\";\nexport var disable = \"index-module--disable--5f48a\";\nexport var div = \"index-module--div--6ad27\";\nexport var header = \"index-module--header--db97b\";\nexport var icon = \"index-module--icon--b9843\";\nexport var icons = \"index-module--icons--8f651\";\nexport var image = \"index-module--image--3ec17\";\nexport var navigator = \"index-module--navigator--bf120\";\nexport var picture = \"index-module--picture--1d6a9\";\nexport var programming = \"index-module--programming--d7e17\";\nexport var roles = \"index-module--roles--0cdf4\";\nexport var tabs = \"index-module--tabs--0eb4c\";\nexport var textCenter = \"index-module--textCenter--0696e\";\nexport var verticalLine = \"index-module--verticalLine--dcf2c\";","import React, { FC } from 'react';\r\nimport { graphql, Link, PageProps } from 'gatsby';\r\nimport { GatsbyImage, IGatsbyImageData, getImage } from 'gatsby-plugin-image';\r\nimport moment from 'moment';\r\n\r\nimport SEO from '../../components/SEO';\r\nimport Layout from '../../components/Layout';\r\nimport Icon from '../../components/Icon';\r\nimport Tab from '../../components/Tab';\r\nimport Role from '../../components/Role';\r\nimport * as style from './index.module.scss';\r\n\r\nexport type ImageFile = {\r\n\tname: string,\r\n\text: string,\r\n\trelativeDirectory: string,\r\n}\r\ntype DataProps = {\r\n\tproject: {\r\n\t\tfields: {\r\n\t\t\tcontents: string,\r\n\t\t}\r\n\t\trelativeDirectory: string,\r\n\t}\r\n\timages: {\r\n\t\tnodes: Array<ImageFile>\r\n\t}\r\n\ticons: {\r\n\t\tnodes: Array<{\r\n\t\t\tname: string,\r\n\t\t}>\r\n\t}\r\n}\r\nexport type Project = {\r\n\tname: string,\r\n\theadline: string,\r\n\timage: {\r\n\t\ticon: string,\r\n\t\tcover: string,\r\n\t},\r\n\tlink: {\r\n\t\tcode: string,\r\n\t\tdemo: string,\r\n\t},\r\n\ttime: {\r\n\t\tstart: string,\r\n\t\tend: string | null,\r\n\t},\r\n\ttabs: Array<string>,\r\n\troles: Array<string>,\r\n\tprogramming: {\r\n\t\tlanguages: Array<string>,\r\n\t\tframeworks: Array<string>,\r\n\t},\r\n\tdescriptions: Array<{\r\n\t\ttitle: string,\r\n\t\ttext?: string,\r\n\t\tlist?: Array<string>,\r\n\t\timage?: string,\r\n\t}>,\r\n\tpathname: string,\r\n}\r\nexport function parseProject(contents: string, pathname?: string): Project {\r\n\treturn {\r\n\t\t...JSON.parse(contents),\r\n\t\tpathname: `/${pathname}` ?? '',\r\n\t};\r\n}\r\nexport function getProjectImageData(pathname: string, fileName: string, files: Array<ImageFile>): IGatsbyImageData {\r\n\treturn getImage(\r\n\t\tfiles.find((file) => (\r\n\t\t\tpathname === `/${file.relativeDirectory}` &&\r\n\t\t\t\tfileName === `${file.name}${file.ext}`\r\n\t\t))!\r\n\t)!\r\n}\r\n\r\nconst ProjectTemplate: FC<PageProps<DataProps>> = ({ data }) => {\r\n\tconst project = parseProject(data.project.fields.contents, data.project.relativeDirectory);\r\n\tconst parseTimeText = (time: string): string => moment(time).format('MMM YYYY');\r\n\tconst getDuration = (time: { start: string, end: string | null}): string => {\r\n\t\tconst endTime = (\r\n\t\t\ttime.end ?\r\n\t\t\t\tmoment(time.end).endOf('month') :\r\n\t\t\t\tmoment()\r\n\t\t);\r\n\t\tconst duration = moment.duration(endTime.diff(moment(time.start)));\r\n\t\tconst year = Math.floor(duration.asYears());\r\n\t\tconst month = Math.round(duration.asMonths() % 12);\r\n\t\treturn `${(year > 0) ? `${year}yrs ` : ''}${month}mos`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.div}\r\n\t\t\t>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.header}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\tclassName={style.cover}\r\n\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\tproject.image.cover,\r\n\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\talt={`${project.name} cover`}\r\n\t\t\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{project.image.icon?\r\n\t\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\t\tclassName={style.icon}\r\n\t\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\t\tproject.image.icon,\r\n\t\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\talt={`${project.name} icon`}\r\n\t\t\t\t\t\t\t\tloading='eager'\r\n\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<h1>{project.name}</h1>\r\n\t\t\t\t\t\t<h2>{project.headline}</h2>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.navigator}\r\n\t\t\t\t>\r\n                    <a\r\n\t\t\t\t\t\tclassName={project.link.code ? '' : style.disable}\r\n                        href={project.link.code}\r\n                        target='_blank'\r\n                        rel='noreferrer'\r\n\t\t\t\t\t\ttitle='source code link'\r\n                    >CODE</a>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={style.verticalLine}\r\n\t\t\t\t\t/>\r\n                    <a\r\n\t\t\t\t\t\tclassName={`${style.link} ${project.link.demo ? '' : style.disable}`}\r\n                        href={project.link.demo}\r\n                        target='_blank'\r\n                        rel='noreferrer'\r\n\t\t\t\t\t\ttitle='DEMO link'\r\n                    >DEMO</a>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.textCenter}\r\n\t\t\t\t>\r\n\t\t\t\t\t{`${parseTimeText(project.time.start)}` +\r\n\t\t\t\t\t\t` - ${project.time.end ? parseTimeText(project.time.end) : 'Present'}` +\r\n\t\t\t\t\t\t` · ${getDuration(project.time)}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.tabs}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Tab</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{project.tabs.map(tab =>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\tkey={`tab_${tab}`}\r\n\t\t\t\t\t\t\t\tname={tab}\r\n\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.roles}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Role</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{project.roles.map(role =>\r\n\t\t\t\t\t\t\t<Role\r\n\t\t\t\t\t\t\t\tkey={`role${role}`}\r\n\t\t\t\t\t\t\t\tname={role}\r\n\t\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.programming}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Framework <span>|</span> Language</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.icons}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.programming.frameworks.map(framework =>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tkey={`icon_${framework}`}\r\n\t\t\t\t\t\t\t\t\tto={`/projects/?frameworks=${framework}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\tname={framework}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{(project.programming.languages.length !== 0) && (project.programming.frameworks.length !== 0)?\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={style.verticalLine}\r\n\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={style.icons}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{project.programming.languages.map(language =>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tkey={`icon_${language}`}\r\n\t\t\t\t\t\t\t\t\tto={`/projects/?languages=${language}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\tname={language}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t\r\n\t\t\t\t<section\r\n\t\t\t\t\tclassName={style.description}\r\n\t\t\t\t>\r\n\t\t\t\t\t{project.descriptions.map(description =>\r\n\t\t\t\t\t\t<article\r\n\t\t\t\t\t\t\tkey={`article_${description.title}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>{description.title}</h1>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={style.content}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{description.text ?\r\n\t\t\t\t\t\t\t\t\t\t<p>{description.text}</p> :\r\n\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{description.list ?\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t{description.list.map((text, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`descriptionText_${description.title}_${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</ul> :\r\n\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{description.image?\r\n\t\t\t\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\t\t\t\tclassName={style.image}\r\n\t\t\t\t\t\t\t\t\timage={getProjectImageData(\r\n\t\t\t\t\t\t\t\t\t\tproject.pathname,\r\n\t\t\t\t\t\t\t\t\t\tdescription.image,\r\n\t\t\t\t\t\t\t\t\t\tdata.images.nodes\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\talt={`${description.title} image`}\r\n\t\t\t\t\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\t\t\t\t/>:\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t)\r\n}\r\nexport default ProjectTemplate;\r\n\r\nexport const Head: FC<PageProps<DataProps>> = ({ data, location }) => (\r\n\t<SEO\r\n\t\ttitle={`${parseProject(data.project.fields.contents).name} | Projects`}\r\n\t\tpathname={location.pathname}\r\n\t/>\r\n)\r\n\r\nexport const query = graphql`\r\n    query Project($id: String!){\r\n\t\tproject: file(id: {eq: $id}) {\r\n\t\t\tfields {\r\n\t\t\t\tcontents\r\n\t\t\t}\r\n\t\t\trelativeDirectory\r\n\t\t}\r\n\t\timages: allFile(\r\n\t\t\tfilter: {\r\n\t\t\t\textension: {regex: \"/png|jpg/\"},\r\n\t\t\t\trelativeDirectory: {regex: \"/^projects//\"}\r\n\t\t\t}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tchildImageSharp {\r\n\t\t\t\t\tgatsbyImageData\r\n\t\t\t\t}\r\n\t\t\t\tname\r\n\t\t\t\text\r\n\t\t\t\trelativeDirectory\r\n\t\t\t}\r\n\t\t}\r\n\t\ticons: allFile(\r\n\t\t\tfilter: {relativeDirectory: {eq: \"icon\"}}\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tname\r\n\t\t\t\tchildImageSharp {\r\n\t\t\t\t\tgatsbyImageData\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n"],"names":["_ref","name","isFocus","onClick","allFile","useStaticQuery","React","className","style","title","GatsbyImage","image","getImage","nodes","find","file","toLowerCase","alt","loading","navigateTo","Link","to","encodeURIComponent","subtitle","pathname","site","mainTitle","description","author","imagePath","siteUrl","siteMetadata","url","rel","href","content","mapColor","Map","isHover","setHoverState","useState","css","borderLeft","get","backgroundColor","onMouseEnter","onMouseLeave","cover","disable","div","header","icon","icons","programming","roles","tabs","textCenter","verticalLine","parseProject","contents","JSON","parse","getProjectImageData","fileName","files","relativeDirectory","ext","_ref2","data","project","fields","parseTimeText","time","moment","format","Layout","images","headline","link","code","target","demo","start","end","endTime","endOf","duration","diff","year","Math","floor","asYears","round","asMonths","getDuration","map","tab","Tab","key","role","Role","frameworks","framework","Icon","languages","length","language","descriptions","text","list","index","Head","_ref3","location","SEO"],"sourceRoot":""}