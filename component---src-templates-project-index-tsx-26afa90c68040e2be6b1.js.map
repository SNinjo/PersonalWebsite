{"version":3,"file":"component---src-templates-project-index-tsx-26afa90c68040e2be6b1.js","mappings":"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","sources":["webpack://SNinjo Personal Website/./src/components/Icon/index.tsx","webpack://SNinjo Personal Website/./src/components/Icon/index.module.scss","webpack://SNinjo Personal Website/./src/components/Role/index.tsx","webpack://SNinjo Personal Website/./src/components/Role/index.module.scss","webpack://SNinjo Personal Website/./src/components/SEO/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.tsx","webpack://SNinjo Personal Website/./src/components/Tab/index.module.scss","webpack://SNinjo Personal Website/./src/templates/project/index.module.scss","webpack://SNinjo Personal Website/./src/templates/project/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport * as style from './index.module.scss';\n\n\ntype Props = {\n    name: string,\n\tisFocus?: boolean,\n\tonClick?: () => void\n}\nconst Icon: FC<Props> = ({ name, isFocus=false, onClick=()=>{} }) => {\n    const { allFile } = useStaticQuery(graphql`\n        query Icon {\n            allFile(filter: {relativeDirectory: {eq: \"icon\"}}) {\n                nodes {\n                name\n                    childImageSharp {\n                        gatsbyImageData\n                    }\n                }\n            }\n        }\n    `)\n\n    return (\n\t\t<picture\n\t\t\tclassName={`${style.picture} ${isFocus ? style.focused : ''}`}\n\t\t\ttitle={name}\n\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t<GatsbyImage\n\t\t\t\tclassName={style.image}\n\t\t\t\timage={\n\t\t\t\t\tgetImage(\n\t\t\t\t\t\tallFile.nodes\n\t\t\t\t\t\t\t.find((file: {name: string}) => (file.name === name.toLowerCase()))\n\t\t\t\t\t)!\n\t\t\t\t}\n\t\t\t\talt={`${name.toLowerCase()} icon`}\n\t\t\t\tloading='lazy'\n\t\t\t/>\n\t\t</picture>\n    )\n}\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--8b4b0\";\nexport var image = \"index-module--image--2392b\";\nexport var picture = \"index-module--picture--3768a\";","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\n\nimport * as style from './index.module.scss';\n\n\ntype Props = {\n    name: string,\n    isFocus?: boolean,\n\tnavigateTo?: string,\n}\nconst Role: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\n    return (\n        <Link\n            to={navigateTo ?? `/projects/?roles=${encodeURIComponent(name)}`}\n\t\t\tclassName={`${style.link} ${isFocus ? style.focused : ''}`}\n        >\n\t\t\t#{name}\n        </Link>\n    )\n}\nexport default Role;\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--55d46\";\nexport var link = \"index-module--link--c3c71\";","import React, { FC } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\n\ntype Props = {\n    title: string\n    pathname: string\n}\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\n    const { site } = useStaticQuery(graphql`\n        query SEO {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    author\n                    image\n                    siteUrl\n                }\n            }\n        }\n    `)\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\n    const url = `${siteUrl}${pathname}`;\n    const image = `${siteUrl}/${imagePath}`;\n\n\n    return (\n        <>\n            <title>{title}</title>\n            <link rel='canonical' href={url} />\n\n            <meta name=\"description\" content={description} />\n            <meta name=\"image\" content={image} />\n\n            <meta name='og:title' content={title} />\n            <meta name='og:description' content={description} />\n            <meta name='og:image' content={image} />\n            <meta name='og:type' content='website' />\n            <meta name='og:url' content={url} />\n            <meta name='og:site_name' content={mainTitle} />\n            \n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:url\" content={url} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:image\" content={image} />\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\n        </>\n    )\n}\nexport default SEO;","import React, { CSSProperties, FC, useState } from 'react';\nimport { Link } from 'gatsby';\n\nimport * as style from './index.module.scss';\n\n\nconst mapColor: Map<string, string> = new Map([\n\t['all', '#ffffff'],\n    ['project', '#fd5f5f'],\n    ['side project', '#fd995f'],\n    ['software', '#fdf25f'],\n    ['web', '#bffda2'],\n    // ['UI/ UX', '#5fbefd'],\n    ['game', '#775ffd'],\n    ['IoT', '#b65ffd'],\n    // ['AI, \"#ff8af5\"],\n])\nconst strColorIdle = \"#8b8b8b\";\nconst strColorHover = \"#67676b\";\nconst strColorClicked = \"#5b5b5e\";\n\ntype Props = {\n    name: string,\n    isFocus?: boolean,\n\tnavigateTo?: string,\n}\nconst Tab: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\n    const [isHover, setHoverState] = useState(false);\n\n    const css: CSSProperties = {\n        borderLeft: `solid 5px ${mapColor.get(name) ?? 'white'}`,\n        backgroundColor: (isFocus ? strColorClicked : (isHover ? strColorHover : strColorIdle)),\n    }\n    return (\n        <Link\n            to={navigateTo ?? `/projects/?tabs=${encodeURIComponent(name)}`}\n        >\n            <div\n                style={css}\n                className={style.div}\n                onMouseEnter={() => setHoverState(true)}\n                onMouseLeave={() => setHoverState(false)}\n            >\n                <span>{name}</span>\n            </div>\n        </Link>\n    )\n}\nexport default Tab;\n","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--3e51f\";","// extracted by mini-css-extract-plugin\nexport var content = \"index-module--content--addbe\";\nexport var cover = \"index-module--cover--72abe\";\nexport var description = \"index-module--description--77cfc\";\nexport var disable = \"index-module--disable--5f48a\";\nexport var div = \"index-module--div--6ad27\";\nexport var header = \"index-module--header--db97b\";\nexport var icon = \"index-module--icon--b9843\";\nexport var icons = \"index-module--icons--8f651\";\nexport var image = \"index-module--image--3ec17\";\nexport var navigator = \"index-module--navigator--bf120\";\nexport var picture = \"index-module--picture--1d6a9\";\nexport var programming = \"index-module--programming--d7e17\";\nexport var roles = \"index-module--roles--0cdf4\";\nexport var tabs = \"index-module--tabs--0eb4c\";\nexport var textCenter = \"index-module--textCenter--0696e\";\nexport var verticalLine = \"index-module--verticalLine--dcf2c\";","import React, { FC } from 'react';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { GatsbyImage, IGatsbyImageData, getImage } from 'gatsby-plugin-image';\nimport moment from 'moment';\n\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/Layout';\nimport Icon from '../../components/Icon';\nimport Tab from '../../components/Tab';\nimport Role from '../../components/Role';\nimport * as style from './index.module.scss';\n\nexport type ImageFile = {\n\tname: string,\n\text: string,\n\trelativeDirectory: string,\n}\ntype DataProps = {\n\tproject: {\n\t\tfields: {\n\t\t\tcontents: string,\n\t\t}\n\t\trelativeDirectory: string,\n\t}\n\timages: {\n\t\tnodes: Array<ImageFile>\n\t}\n\ticons: {\n\t\tnodes: Array<{\n\t\t\tname: string,\n\t\t}>\n\t}\n}\nexport type Project = {\n\tname: string,\n\theadline: string,\n\timage: {\n\t\ticon: string,\n\t\tcover: string,\n\t},\n\tlink: {\n\t\tcode: string,\n\t\tdemo: string,\n\t},\n\ttime: {\n\t\tstart: string,\n\t\tend: string | null,\n\t},\n\ttabs: Array<string>,\n\troles: Array<string>,\n\tprogramming: {\n\t\tlanguages: Array<string>,\n\t\tframeworks: Array<string>,\n\t},\n\tdescriptions: Array<{\n\t\ttitle: string,\n\t\ttext?: string,\n\t\tlist?: Array<string>,\n\t\timage?: string,\n\t}>,\n\tpathname: string,\n}\nexport function parseProject(contents: string, pathname?: string): Project {\n\treturn {\n\t\t...JSON.parse(contents),\n\t\tpathname: `/${pathname}` ?? '',\n\t};\n}\nexport function getProjectImageData(pathname: string, fileName: string, files: Array<ImageFile>): IGatsbyImageData {\n\treturn getImage(\n\t\tfiles.find((file) => (\n\t\t\tpathname === `/${file.relativeDirectory}` &&\n\t\t\t\tfileName === `${file.name}${file.ext}`\n\t\t))!\n\t)!\n}\n\nconst ProjectTemplate: FC<PageProps<DataProps>> = ({ data }) => {\n\tconst project = parseProject(data.project.fields.contents, data.project.relativeDirectory);\n\tconst parseTimeText = (time: string): string => moment(time).format('MMM YYYY');\n\tconst getDuration = (time: { start: string, end: string | null}): string => {\n\t\tconst endTime = (\n\t\t\ttime.end ?\n\t\t\t\tmoment(time.end).endOf('month') :\n\t\t\t\tmoment()\n\t\t);\n\t\tconst duration = moment.duration(endTime.diff(moment(time.start)));\n\t\tconst year = Math.floor(duration.asYears());\n\t\tconst month = Math.round(duration.asMonths() % 12);\n\t\treturn `${(year > 0) ? `${year}yrs ` : ''}${month}mos`;\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div\n\t\t\t\tclassName={style.div}\n\t\t\t>\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.header}\n\t\t\t\t>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\t\tclassName={style.cover}\n\t\t\t\t\t\t\timage={getProjectImageData(\n\t\t\t\t\t\t\t\tproject.pathname,\n\t\t\t\t\t\t\t\tproject.image.cover,\n\t\t\t\t\t\t\t\tdata.images.nodes\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\talt={`${project.name} cover`}\n\t\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{project.image.icon?\n\t\t\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\t\t\tclassName={style.icon}\n\t\t\t\t\t\t\t\timage={getProjectImageData(\n\t\t\t\t\t\t\t\t\tproject.pathname,\n\t\t\t\t\t\t\t\t\tproject.image.icon,\n\t\t\t\t\t\t\t\t\tdata.images.nodes\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\talt={`${project.name} icon`}\n\t\t\t\t\t\t\t\tloading='eager'\n\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<h1>{project.name}</h1>\n\t\t\t\t\t\t<h2>{project.headline}</h2>\n\t\t\t\t\t</main>\n\t\t\t\t</section>\n\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.navigator}\n\t\t\t\t>\n                    <a\n\t\t\t\t\t\tclassName={project.link.code ? '' : style.disable}\n                        href={project.link.code}\n                        target='_blank'\n                        rel='noreferrer'\n\t\t\t\t\t\ttitle='source code link'\n                    >CODE</a>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={style.verticalLine}\n\t\t\t\t\t/>\n                    <a\n\t\t\t\t\t\tclassName={project.link.demo ? '' : style.disable}\n                        href={project.link.demo}\n                        target='_blank'\n                        rel='noreferrer'\n\t\t\t\t\t\ttitle='DEMO link'\n                    >DEMO</a>\n\t\t\t\t</section>\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.textCenter}\n\t\t\t\t>\n\t\t\t\t\t{`${parseTimeText(project.time.start)}` +\n\t\t\t\t\t\t` - ${project.time.end ? parseTimeText(project.time.end) : 'Present'}` +\n\t\t\t\t\t\t` · ${getDuration(project.time)}`\n\t\t\t\t\t}\n\t\t\t\t</section>\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.tabs}\n\t\t\t\t>\n\t\t\t\t\t<h1>Tab</h1>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{project.tabs.map(tab =>\n\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\tkey={`tab_${tab}`}\n\t\t\t\t\t\t\t\tname={tab}\n\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.roles}\n\t\t\t\t>\n\t\t\t\t\t<h1>Role</h1>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{project.roles.map(role =>\n\t\t\t\t\t\t\t<Role\n\t\t\t\t\t\t\t\tkey={`role${role}`}\n\t\t\t\t\t\t\t\tname={role}\n\t\t\t\t\t\t\t/>\t\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.programming}\n\t\t\t\t>\n\t\t\t\t\t<h1>Framework <span>|</span> Language</h1>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={style.icons}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{project.programming.frameworks.map(framework =>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tkey={`icon_${framework}`}\n\t\t\t\t\t\t\t\t\tto={`/projects/?frameworks=${framework}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\tname={framework}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{(project.programming.languages.length !== 0) && (project.programming.frameworks.length !== 0)?\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={style.verticalLine}\n\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={style.icons}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{project.programming.languages.map(language =>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tkey={`icon_${language}`}\n\t\t\t\t\t\t\t\t\tto={`/projects/?languages=${language}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\tname={language}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t\t<section\n\t\t\t\t\tclassName={style.description}\n\t\t\t\t>\n\t\t\t\t\t{project.descriptions.map(description =>\n\t\t\t\t\t\t<article\n\t\t\t\t\t\t\tkey={`article_${description.title}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>{description.title}</h1>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={style.content}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{description.text ?\n\t\t\t\t\t\t\t\t\t\t<p>{description.text}</p> :\n\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{description.list ?\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t{description.list.map((text, index) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`descriptionText_${description.title}_${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</ul> :\n\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{description.image?\n\t\t\t\t\t\t\t\t<GatsbyImage\n\t\t\t\t\t\t\t\t\tclassName={style.image}\n\t\t\t\t\t\t\t\t\timage={getProjectImageData(\n\t\t\t\t\t\t\t\t\t\tproject.pathname,\n\t\t\t\t\t\t\t\t\t\tdescription.image,\n\t\t\t\t\t\t\t\t\t\tdata.images.nodes\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\talt={`${description.title} image`}\n\t\t\t\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</article>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\nexport default ProjectTemplate;\n\nexport const Head: FC<PageProps<DataProps>> = ({ data, location }) => (\n\t<SEO\n\t\ttitle={`${parseProject(data.project.fields.contents).name} | Projects`}\n\t\tpathname={location.pathname}\n\t/>\n)\n\nexport const query = graphql`\n    query Project($id: String!){\n\t\tproject: file(id: {eq: $id}) {\n\t\t\tfields {\n\t\t\t\tcontents\n\t\t\t}\n\t\t\trelativeDirectory\n\t\t}\n\t\timages: allFile(\n\t\t\tfilter: {\n\t\t\t\textension: {regex: \"/png|jpg/\"},\n\t\t\t\trelativeDirectory: {regex: \"/^projects//\"}\n\t\t\t}\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData\n\t\t\t\t}\n\t\t\t\tname\n\t\t\t\text\n\t\t\t\trelativeDirectory\n\t\t\t}\n\t\t}\n\t\ticons: allFile(\n\t\t\tfilter: {relativeDirectory: {eq: \"icon\"}}\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tgatsbyImageData\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"names":["_ref","name","isFocus","onClick","allFile","useStaticQuery","React","className","style","title","GatsbyImage","image","getImage","nodes","find","file","toLowerCase","alt","loading","navigateTo","Link","to","encodeURIComponent","subtitle","pathname","site","mainTitle","description","author","imagePath","siteUrl","siteMetadata","url","rel","href","content","mapColor","Map","isHover","setHoverState","useState","css","borderLeft","get","backgroundColor","onMouseEnter","onMouseLeave","disable","icons","verticalLine","parseProject","contents","JSON","parse","getProjectImageData","fileName","files","relativeDirectory","ext","_ref2","data","project","fields","parseTimeText","time","moment","format","Layout","cover","images","icon","headline","link","code","target","demo","start","end","endTime","endOf","duration","diff","year","Math","floor","asYears","round","asMonths","getDuration","tabs","map","tab","Tab","key","roles","role","Role","programming","frameworks","framework","Icon","languages","length","language","descriptions","text","list","index","Head","_ref3","location","SEO"],"sourceRoot":""}