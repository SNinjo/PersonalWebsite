{"version":3,"file":"component---src-pages-projects-index-tsx-8047a8d4534f98153795.js","mappings":"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","sources":["webpack://sninjo-personal-website/./src/components/Icon/index.tsx","webpack://sninjo-personal-website/./src/components/Icon/index.module.scss","webpack://sninjo-personal-website/./src/components/FadeAnimation/index.tsx","webpack://sninjo-personal-website/./src/components/Footer/index.tsx","webpack://sninjo-personal-website/./src/components/Footer/index.module.scss","webpack://sninjo-personal-website/./src/components/Header/index.module.scss","webpack://sninjo-personal-website/./src/components/Header/index.tsx","webpack://sninjo-personal-website/./src/components/Layout/index.tsx","webpack://sninjo-personal-website/./src/components/Layout/index.module.scss","webpack://sninjo-personal-website/./src/components/Role/index.tsx","webpack://sninjo-personal-website/./src/components/Role/index.module.scss","webpack://sninjo-personal-website/./src/components/SEO/index.tsx","webpack://sninjo-personal-website/./src/components/Tab/index.tsx","webpack://sninjo-personal-website/./src/components/Tab/index.module.scss","webpack://sninjo-personal-website/./src/pages/projects/index.module.scss","webpack://sninjo-personal-website/./src/pages/projects/index.tsx","webpack://sninjo-personal-website/./src/tools/project/index.ts"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport React, { FC } from 'react';\r\nimport * as style from './index.module.scss';\r\nimport type { Plugins } from '../../types/plugins';\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n    onClick?: () => void\r\n}\r\nconst Icon: FC<Props> = ({ name, isFocus=false, onClick=() => {} }) => {\r\n    const { allFile }: Queries.IconQuery = useStaticQuery(graphql`\r\n        query Icon {\r\n            allFile(filter: {relativeDirectory: {eq: \"icon\"}}) {\r\n                nodes {\r\n                    name\r\n                    childImageSharp {\r\n                        gatsbyImageData\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `);\r\n    const image = (\r\n        allFile.nodes\r\n            .find((file: {name: string}) => (file.name === name.toLowerCase()))\r\n    ) as Plugins.GatsbyImageData;\r\n\r\n    return (\r\n        <picture\r\n            className={`${style.picture} ${isFocus ? style.focused : ''}`}\r\n            title={name}\r\n\r\n            onClick={onClick}\r\n        >\r\n            <GatsbyImage\r\n                className={style.image}\r\n                image={getImage(image)!}\r\n                alt={`${name.toLowerCase()} icon`}\r\n                loading='lazy'\r\n            />\r\n        </picture>\r\n    )\r\n}\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--8b4b0\";\nexport var image = \"index-module--image--2392b\";\nexport var picture = \"index-module--picture--3768a\";","import React, { CSSProperties, ReactNode, useRef, useState } from 'react';\r\n\r\nconst intSpeedMillisecondPerFrame: number = 3;\r\nconst intFrameNumberTotal: number = 50;\r\nconst intMaxValue: number = 1;\r\nconst intMinValue: number = 0;\r\nconst fadeIn = (intOpacity: number, funcUpdate: (value: number)=>void, funcTriggerFinally?: ()=>void): NodeJS.Timer => {\r\n    return setTimer(intOpacity, 1, funcUpdate, funcTriggerFinally);\r\n}\r\nconst fadeOut = (intOpacity: number, funcUpdate: (value: number)=>void, funcTriggerFinally?: ()=>void): NodeJS.Timer => {\r\n    return setTimer(intOpacity, -1, funcUpdate, funcTriggerFinally);\r\n}\r\nconst setTimer = (intValue: number, intNumberSign: number, funcUpdate: (value: number)=>void, funcTriggerFinally = () => {}): NodeJS.Timer => {\r\n    let timeoutID = setInterval(() => {\r\n        intValue += (1 / intFrameNumberTotal) * intNumberSign;\r\n        funcUpdate(intValue);\r\n\r\n        if ((intValue < intMinValue) || (intValue > intMaxValue)) {\r\n            clearInterval(timeoutID);\r\n            funcTriggerFinally();\r\n        }\r\n    }, intSpeedMillisecondPerFrame);\r\n    return timeoutID;\r\n}\r\n\r\nexport const FadeIn = (props: {children: ReactNode}) => {\r\n    const [floatElementOpacity, setElementOpacity] = useState(0);\r\n    const isFirstRender = useRef(true);\r\n    if (isFirstRender.current) {\r\n        fadeIn(floatElementOpacity, (floatOpacity: number) => { setElementOpacity(floatOpacity) } );\r\n    }\r\n\r\n    isFirstRender.current = false;\r\n    const Css: CSSProperties = {\r\n        margin: '0',\r\n        opacity: floatElementOpacity\r\n    }\r\n    return (\r\n        <div style={Css}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FadeAnimation = (props: {children: ReactNode, isShow: boolean}) => {\r\n    const [floatElementOpacity, setElementOpacity] = useState(0);\r\n    const isAnimating = useRef<NodeJS.Timer>();\r\n    const checkAnimationState = () => {\r\n        if (isAnimating.current !== null) clearInterval(isAnimating.current);\r\n    }\r\n\r\n    const isShowPrevious = useRef(false);\r\n    if (props.isShow && !isShowPrevious.current) {\r\n        checkAnimationState();\r\n        isAnimating.current = fadeIn(floatElementOpacity, (floatOpacity: number) => setElementOpacity(floatOpacity) );\r\n    }\r\n    else if (!props.isShow && isShowPrevious.current) {\r\n        checkAnimationState();\r\n        isAnimating.current = fadeOut(floatElementOpacity, (floatOpacity: number) => setElementOpacity(floatOpacity) );\r\n    }\r\n    isShowPrevious.current = props.isShow;\r\n\r\n    const Css: CSSProperties = {\r\n        margin: '0',\r\n        display: 'inline',\r\n        opacity: floatElementOpacity\r\n    }\r\n    return (\r\n        <div style={Css}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import { StaticImage } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport * as style from './index.module.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={style.footer}>\r\n            <nav>\r\n                <div>\r\n                    <a\r\n                        href=\"mailto:contact@SNinjo.com\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        title='Email'\r\n                    >\r\n                        <StaticImage\r\n                            style={{width: 30}}\r\n                            src='../../assets/icon/email.png'\r\n                            alt='email logo'\r\n                            loading='eager'\r\n                        />\r\n                    </a>\r\n                    <a\r\n                        href=\"https://www.linkedin.com/in/ru-jun-liao-3bba07196/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        title='Linkedin'\r\n                    >\r\n                        <StaticImage\r\n                            style={{width: 23}}\r\n                            src='../../assets/icon/linkedin.png'\r\n                            alt='linkedin logo'\r\n                            loading='eager'\r\n                        />\r\n                    </a>\r\n                    <a\r\n                        href=\"https://github.com/SNinjo\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        title='Github'\r\n                    >\r\n                        <StaticImage\r\n                            style={{width: 25}}\r\n                            src='../../assets/icon/github_white.png'\r\n                            alt='github logo'\r\n                            loading='eager'\r\n                        />\r\n                    </a>\r\n                    <a\r\n                        href=\"https://www.instagram.com/sninjo657/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        title='Instagram'\r\n                    >\r\n                        <StaticImage\r\n                            style={{width: 27}}\r\n                            src='../../assets/icon/instagram.png'\r\n                            alt='instagram logo'\r\n                            loading='eager'\r\n                        />\r\n                    </a>\r\n                    {/* eslint-disable-next-line react/jsx-no-target-blank */}\r\n                    <a\r\n                        id={style.blog}\r\n                        href=\"https://blog.sninjo.com\"\r\n                        target=\"_blank\"\r\n                        title='Blog'\r\n                    >\r\n                        <StaticImage\r\n                            style={{width: 25}}\r\n                            src='../../assets/blog.png'\r\n                            alt='SNinjo blog logo'\r\n                            loading='eager'\r\n                        />\r\n                    </a>\r\n                </div>\r\n            </nav>\r\n            <p>SNinjo 2022 © all rights reserved</p>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;\r\n","// extracted by mini-css-extract-plugin\nexport var blog = \"index-module--blog--3ec66\";\nexport var footer = \"index-module--footer--8eaa0\";\nexport var tool = \"index-module--tool--8676f\";","// extracted by mini-css-extract-plugin\nexport var about = \"index-module--about--77008\";\nexport var contact = \"index-module--contact--77353\";\nexport var header = \"index-module--header--52ad0\";\nexport var home = \"index-module--home--9d6f8\";\nexport var img = \"index-module--img--f1cc6\";\nexport var logo = \"index-module--logo--b1f41\";\nexport var pivot = \"index-module--pivot--5d156\";\nexport var resume = \"index-module--resume--b1410\";","import { Link } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\nimport React, { useState } from 'react';\r\nimport * as style from './index.module.scss';\r\nimport { FadeAnimation } from '../FadeAnimation';\r\n\r\nconst Header = () => {\r\n    const [isHover, setHoverState] = useState(false);\r\n    const mainPath = (typeof window !== 'undefined')? window.location.pathname.match(/^(\\/[a-zA-Z0-9]*)/)![1] : '';\r\n\r\n    return (\r\n        <header\r\n            className={style.header}\r\n        >\r\n            <Link\r\n                to='/'\r\n                id={style.logo}\r\n                onMouseEnter={() => setHoverState(true)}\r\n                onMouseLeave={() => setHoverState(false)}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../assets/SNinjo.png'\r\n                    alt='SNinjo logo'\r\n                    loading='eager'\r\n                />\r\n                <FadeAnimation isShow={isHover}>\r\n                    <span>SNinjo.com</span>\r\n                </FadeAnimation>\r\n            </Link>\r\n\r\n            <nav>\r\n                <Link\r\n                    to='/'\r\n                    id={style.home}\r\n                >\r\n                    <FadeAnimation isShow={mainPath === '/'}>\r\n                        <span className={style.pivot}>/</span>\r\n                    </FadeAnimation>\r\n                    <span>home</span>\r\n                </Link>\r\n                <Link\r\n                    to='/projects'\r\n                    id={style.about}\r\n                >\r\n                    <FadeAnimation isShow={mainPath === '/projects'}>\r\n                        <span className={style.pivot}>/</span>\r\n                    </FadeAnimation>\r\n                    <span>projects</span>\r\n                </Link>\r\n                <Link\r\n                    to='/resume'\r\n                    id={style.resume}\r\n                >\r\n                    <FadeAnimation isShow={mainPath === '/resume'}>\r\n                        <span className={style.pivot}>/</span>\r\n                    </FadeAnimation>\r\n                    <span>resume</span>\r\n                </Link>\r\n                <Link\r\n                    to='/contact'\r\n                    id={style.contact}\r\n                >\r\n                    <FadeAnimation isShow={mainPath === '/contact'}>\r\n                        <span className={style.pivot}>/</span>\r\n                    </FadeAnimation>\r\n                    <span>contact</span>\r\n                </Link>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport * as style from './index.module.scss';\r\nimport { FadeIn } from '../../components/FadeAnimation';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport '../../global.scss';\r\n\r\ntype Props = {\r\n    children: JSX.Element,\r\n}\r\nconst Layout: FC<Props> = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <FadeIn>\r\n                <div className={style.div}>\r\n                    {children}\r\n                </div>\r\n            </FadeIn>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default Layout;\r\n","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--bda75\";","import { Link } from 'gatsby';\r\nimport React, { FC } from 'react';\r\nimport * as style from './index.module.scss';\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n    navigateTo?: string,\r\n}\r\nconst Role: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?roles=${encodeURIComponent(name)}`}\r\n            className={`${style.link} ${isFocus ? style.focused : ''}`}\r\n        >\r\n            #{name}\r\n        </Link>\r\n    )\r\n}\r\nexport default Role;\r\n","// extracted by mini-css-extract-plugin\nexport var focused = \"index-module--focused--55d46\";\nexport var link = \"index-module--link--c3c71\";","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React, { FC } from 'react';\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site }: Queries.SEOQuery = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `);\r\n    const { title: mainTitle, description, image: imagePath, siteUrl } = site!.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}/${imagePath}`;\r\n\r\n    return (\r\n        <>\r\n            <html lang=\"en\" />\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;\r\n","import { Link } from 'gatsby';\r\nimport React, { CSSProperties, FC, useState } from 'react';\r\nimport * as style from './index.module.scss';\r\n\r\nconst mapColor: Map<string, string> = new Map([\r\n    ['job', '#fd5f5f'],\r\n    ['side project', '#fd995f'],\r\n    ['web', '#fdf25f'],\r\n    // ['side project', '#bffda2'],\r\n    // ['web', '#5fbefd'],\r\n    ['game', '#775ffd'],\r\n    ['IoT', '#b65ffd'],\r\n    // ['AI, \"#ff8af5\"],\r\n])\r\nconst strColorIdle = '#8b8b8b';\r\nconst strColorHover = '#67676b';\r\nconst strColorClicked = '#5b5b5e';\r\n\r\ntype Props = {\r\n    name: string,\r\n    isFocus?: boolean,\r\n    navigateTo?: string,\r\n}\r\nconst Tab: FC<Props> = ({ name, isFocus=false, navigateTo }) => {\r\n    const [isHover, setHoverState] = useState(false);\r\n\r\n    const css: CSSProperties = {\r\n        borderLeft: `solid 5px ${mapColor.get(name) ?? 'white'}`,\r\n        backgroundColor: (isFocus ? strColorClicked : (isHover ? strColorHover : strColorIdle)),\r\n    }\r\n    return (\r\n        <Link\r\n            to={navigateTo ?? `/projects/?tabs=${encodeURIComponent(name)}`}\r\n        >\r\n            <div\r\n                style={css}\r\n                className={style.div}\r\n                onMouseEnter={() => setHoverState(true)}\r\n                onMouseLeave={() => setHoverState(false)}\r\n            >\r\n                <span>{name}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default Tab;\r\n","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--3e51f\";","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--ff6a6\";\nexport var headline = \"index-module--headline--4cda7\";\nexport var icon = \"index-module--icon--ff7ce\";\nexport var name = \"index-module--name--32248\";\nexport var project = \"index-module--project--d0211\";","import { Link, PageProps, graphql, navigate } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport React, { FC } from 'react';\r\nimport * as style from './index.module.scss';\r\nimport Icon from '../../components/Icon';\r\nimport Layout from '../../components/Layout';\r\nimport Role from '../../components/Role';\r\nimport SEO from '../../components/SEO';\r\nimport Tab from '../../components/Tab';\r\nimport { Project, getProjectImageData, parseProject } from '../../tools/project';\r\n\r\nexport const query = graphql`\r\n    query Projects {\r\n        projects: allFile(\r\n            filter:{\r\n                name: {eq: \"project\"},\r\n                extension: {eq: \"json\"},\r\n                relativeDirectory: {regex: \"/^projects//\"}\r\n            }\r\n        ) {\r\n            nodes {\r\n                fields {\r\n                    contents\r\n                }\r\n                relativeDirectory\r\n            }\r\n        }\r\n        projectImages: allFile(\r\n            filter: {\r\n                extension: {regex: \"/png|jpg/\"},\r\n                relativeDirectory: {regex: \"/^projects//\"}\r\n            }\r\n        ) {\r\n            nodes {\r\n                childImageSharp {\r\n                    gatsbyImageData\r\n                }\r\n                name\r\n                ext\r\n                relativeDirectory\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\ntype SearchParameterNames = 'tabs' | 'roles' | 'languages' | 'frameworks' | 'techniques';\r\nclass SearchParameters {\r\n    tabs: Set<string>;\r\n    roles: Set<string>;\r\n    languages: Set<string>;\r\n    frameworks: Set<string>;\r\n    techniques: Set<string>;\r\n\r\n    private encode(key: string, value: Set<string>): string {\r\n        return `${key}=${encodeURIComponent([ ...value ].join('&'))}`;\r\n    }\r\n    private decode(parameter: string | null): Set<string> {\r\n        if (parameter === null) return new Set();\r\n        return new Set(\r\n            decodeURIComponent(parameter)\r\n                .split('&')\r\n                .filter(value => (value !== ''))\r\n        );\r\n    }\r\n\r\n    constructor(search: string) {\r\n        const urlSearchParameters = new URLSearchParams(search);\r\n        this.tabs = this.decode(urlSearchParameters.get('tabs'));\r\n        this.roles = this.decode(urlSearchParameters.get('roles'));\r\n        this.languages = this.decode(urlSearchParameters.get('languages'));\r\n        this.frameworks = this.decode(urlSearchParameters.get('frameworks'));\r\n        this.techniques = this.decode(urlSearchParameters.get('techniques'));\r\n    }\r\n    toString(): string {\r\n        const parameters = [\r\n            this.encode('tabs', this.tabs),\r\n            this.encode('roles', this.roles),\r\n            this.encode('languages', this.languages),\r\n            this.encode('frameworks', this.frameworks),\r\n            this.encode('techniques', this.techniques),\r\n        ]\r\n        return `?${parameters.join('&')}`;\r\n    }\r\n    clone(): SearchParameters {\r\n        return new SearchParameters(this.toString());\r\n    }\r\n\r\n    has(key: SearchParameterNames, value: string): boolean {\r\n        return this[key].has(value);\r\n    }\r\n    add(key: SearchParameterNames, value: string): SearchParameters {\r\n        this[key].add(value);\r\n        return this;\r\n    }\r\n    delete(key: SearchParameterNames, value: string): SearchParameters {\r\n        this[key].delete(value);\r\n        return this;\r\n    }\r\n    getNavigationPath(key: SearchParameterNames, value: string): string {\r\n        const newSearchParameters = this.clone();\r\n        return (\r\n            this.has(key, value) ?\r\n                newSearchParameters.delete(key, value).toString() :\r\n                newSearchParameters.add(key, value).toString()\r\n        );\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return (\r\n            this.tabs.size === 0\r\n                && this.roles.size === 0\r\n                && this.languages.size === 0\r\n                && this.frameworks.size === 0\r\n                && this.techniques.size === 0\r\n        );\r\n    }\r\n    isMatch(project: Project): boolean {\r\n        for (const tab of this.tabs) {\r\n            if (!project.tabs.includes(tab)) return false;\r\n        }\r\n        for (const role of this.roles) {\r\n            if (!project.roles.includes(role)) return false;\r\n        }\r\n        for (const language of this.languages) {\r\n            if (!project.programming.languages.includes(language)) return false;\r\n        }\r\n        for (const framework of this.frameworks) {\r\n            if (!project.programming.frameworks.includes(framework)) return false;\r\n        }\r\n        for (const technique of this.techniques) {\r\n            if (!project.programming.techniques.includes(technique)) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nconst ProjectsPage: FC<PageProps<Queries.ProjectsQuery>> = ({ data, location }) => {\r\n    const tabs = new Set<string>();\r\n    const roles = new Set<string>();\r\n    const languages = new Set<string>();\r\n    const frameworks = new Set<string>();\r\n    const techniques = new Set<string>();\r\n    data.projects.nodes.forEach(node => {\r\n        const project: Project = parseProject(node.fields.contents);\r\n        project.tabs.forEach(tab => tabs.add(tab));\r\n        project.roles.forEach(role => roles.add(role));\r\n        project.programming.languages.forEach(language => languages.add(language));\r\n        project.programming.frameworks.forEach(framework => frameworks.add(framework));\r\n        project.programming.techniques.forEach(technique => techniques.add(technique));\r\n    });\r\n\r\n    const searchParameters = new SearchParameters(location.search);\r\n\r\n    const sortNames = (name01: string, name02: string): 1 | -1 => {\r\n        return (name01.toLowerCase() < name02.toLowerCase()) ? -1 : 1;\r\n    }\r\n\r\n    const projects = (\r\n        data.projects.nodes\r\n            .map(node => parseProject(node.fields.contents, node.relativeDirectory))\r\n            .filter(project => searchParameters.isMatch(project))\r\n            .sort((project01, project02) => sortNames(project01.name, project02.name))\r\n            .sort((project01, project02) => {\r\n                if ((project01.time.end === null) && (project02.time.end === null)) {\r\n                    if (project01.name < project02.name) return -1;\r\n                }\r\n                else if (project01.time.end === null) return -1;\r\n                else if (project02.time.end === null) return 1;\r\n                else if (project01.time.end > project02.time.end) return -1;\r\n                return 1;\r\n            })\r\n    );\r\n\r\n    return (\r\n        <Layout>\r\n            <div\r\n                className={style.div}\r\n            >\r\n                <header>\r\n                    <header>\r\n                        <h1>FILTER</h1>\r\n                        <h2>{projects.length} results</h2>\r\n                        <button\r\n                            disabled={searchParameters.isEmpty()}\r\n                            onClick={() => navigate('#')}\r\n                        >\r\n                            clear all\r\n                        </button>\r\n                    </header>\r\n                    <section>\r\n                        <h2>Tabs</h2>\r\n                        <nav>\r\n                            {[ ...tabs ]\r\n                                .sort(sortNames)\r\n                                .map(tab =>\r\n                                    <Tab\r\n                                        key={`tab_${tab}`}\r\n                                        name={tab}\r\n                                        isFocus={searchParameters.has('tabs', tab)}\r\n                                        navigateTo={searchParameters.getNavigationPath('tabs', tab)}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </nav>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Roles</h2>\r\n                        <nav>\r\n                            {[ ...roles ]\r\n                                .sort(sortNames)\r\n                                .map(role =>\r\n                                    <Role\r\n                                        key={`role_${role}`}\r\n                                        name={role}\r\n                                        isFocus={searchParameters.has('roles', role)}\r\n                                        navigateTo={searchParameters.getNavigationPath('roles', role)}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </nav>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Techniques</h2>\r\n                        <nav>\r\n                            {[ ...techniques ]\r\n                                .sort(sortNames)\r\n                                .map(technique =>\r\n                                    <Link\r\n                                        key={`technique_${technique}`}\r\n                                        to={searchParameters.getNavigationPath('techniques', technique)}\r\n                                    >\r\n                                        <Icon\r\n                                            name={technique}\r\n                                            isFocus={searchParameters.has('techniques', technique)}\r\n                                        />\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        </nav>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Frameworks</h2>\r\n                        <nav>\r\n                            {[ ...frameworks ]\r\n                                .sort(sortNames)\r\n                                .map(framework =>\r\n                                    <Link\r\n                                        key={`framework_${framework}`}\r\n                                        to={searchParameters.getNavigationPath('frameworks', framework)}\r\n                                    >\r\n                                        <Icon\r\n                                            name={framework}\r\n                                            isFocus={searchParameters.has('frameworks', framework)}\r\n                                        />\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        </nav>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Languages</h2>\r\n                        <nav>\r\n                            {[ ...languages ]\r\n                                .sort(sortNames)\r\n                                .map(language =>\r\n                                    <Link\r\n                                        key={`language_${language}`}\r\n                                        to={searchParameters.getNavigationPath('languages', language)}\r\n                                    >\r\n                                        <Icon\r\n                                            name={language}\r\n                                            isFocus={searchParameters.has('languages', language)}\r\n                                        />\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        </nav>\r\n                    </section>\r\n                </header>\r\n                {projects.map(project =>\r\n                    <Link\r\n                        key={`project_${project.pathname}`}\r\n                        to={project.pathname}\r\n                        className={style.project}\r\n                    >\r\n                        {project.image.icon?\r\n                            <GatsbyImage\r\n                                className={style.icon}\r\n                                image={getProjectImageData(\r\n                                    project.pathname,\r\n                                    project.image.icon,\r\n                                    data.projectImages.nodes\r\n                                )}\r\n                                alt={`${project.name} icon`}\r\n                                loading='eager'\r\n                            />:\r\n                            <div className={style.icon} />\r\n                        }\r\n                        <span\r\n                            className={style.name}\r\n                        >\r\n                            {project.name}\r\n                        </span>\r\n                        <span\r\n                            className={style.headline}\r\n                        >\r\n                            {project.headline}\r\n                        </span>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\nexport default ProjectsPage;\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n    <SEO\r\n        title='Projects'\r\n        pathname={location.pathname}\r\n    />\r\n)\r\n","// eslint-disable-next-line import/named\r\nimport { IGatsbyImageData, getImage } from 'gatsby-plugin-image';\r\n\r\nexport type Project = {\r\n\tname: string,\r\n\theadline: string,\r\n\timage: {\r\n\t\ticon: string,\r\n\t\tcover: string,\r\n\t},\r\n\tlink: {\r\n\t\tcode: string,\r\n\t\tdemo: string,\r\n\t},\r\n\ttime: {\r\n\t\tstart: string,\r\n\t\tend: string | null,\r\n\t},\r\n\ttabs: Array<string>,\r\n\troles: Array<string>,\r\n\tprogramming: {\r\n\t\tlanguages: Array<string>,\r\n\t\tframeworks: Array<string>,\r\n\t\ttechniques: Array<string>,\r\n\t},\r\n\tdescriptions: Array<{\r\n\t\ttitle: string,\r\n\t\ttext?: string,\r\n\t\tlist?: Array<string>,\r\n\t\timage?: string,\r\n\t}>,\r\n\tpathname: string,\r\n}\r\nexport function parseProject(contents: string, pathname?: string): Project {\r\n    return {\r\n        ...JSON.parse(contents),\r\n        pathname: `/${pathname}` ?? '',\r\n    };\r\n}\r\n\r\ntype ImageFile = {\r\n\tname: string,\r\n\text: string,\r\n\trelativeDirectory: string,\r\n}\r\nexport function getProjectImageData(pathname: string, fileName: string, files: ReadonlyArray<ImageFile>): IGatsbyImageData {\r\n    return getImage(\r\n        files.find((file) => (\r\n            pathname === `/${file.relativeDirectory}` &&\r\n                fileName === `${file.name}${file.ext}`\r\n        ))!\r\n    )!\r\n}\r\n"],"names":["_ref","name","isFocus","onClick","allFile","useStaticQuery","image","nodes","find","file","toLowerCase","React","className","style","title","GatsbyImage","getImage","alt","loading","fadeIn","intOpacity","funcUpdate","funcTriggerFinally","setTimer","intValue","intNumberSign","timeoutID","setInterval","clearInterval","FadeIn","props","floatElementOpacity","setElementOpacity","useState","isFirstRender","useRef","current","floatOpacity","Css","margin","opacity","children","FadeAnimation","isAnimating","checkAnimationState","isShowPrevious","isShow","display","href","target","rel","StaticImage","width","src","id","pivot","isHover","setHoverState","mainPath","window","location","pathname","match","Link","to","onMouseEnter","onMouseLeave","Header","Footer","navigateTo","encodeURIComponent","subtitle","site","mainTitle","description","imagePath","siteUrl","siteMetadata","url","lang","content","mapColor","Map","css","borderLeft","get","backgroundColor","icon","SearchParameters","search","urlSearchParameters","URLSearchParams","this","tabs","decode","roles","languages","frameworks","techniques","_proto","encode","key","value","_toConsumableArray","join","parameter","Set","decodeURIComponent","split","filter","toString","clone","has","add","delete","getNavigationPath","newSearchParameters","isEmpty","size","isMatch","project","tab","includes","role","language","programming","framework","technique","data","projects","forEach","node","parseProject","fields","contents","searchParameters","sortNames","name01","name02","map","relativeDirectory","sort","project01","project02","time","end","Layout","length","disabled","navigate","Tab","Role","Icon","getProjectImageData","projectImages","headline","Head","_ref2","SEO","JSON","parse","fileName","files","ext"],"sourceRoot":""}